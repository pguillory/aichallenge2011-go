package main

import "testing"

func TestGoalSet(t *testing.T) {
    terrain := NewTerrain(
        "%%%%%%%%%\n" +
        "%a%...%b%\n" +
        "%.%.%.%.%\n" +
        "%...%...%\n" +
        "%%%%%%%%%")

    mystery := NewMystery(terrain)
    potentialEnemy := NewPotentialEnemy(terrain)
    search := NewSearch(terrain, mystery, potentialEnemy)

    distances := search.DistancesFor(Point{1, 1})
    if distances.At(Point{1, 1}) != 14 {
        t.Error(terrain)
        t.Error(distances)
    }
}

// F^7
// < >
// LvJ

/*
func TestTierLength(t *testing.T) {
    terrain := NewTerrain(
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n" +
        "%.................................................1\n" +
        "%.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n" +
        "%.................................................%\n" +
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.%\n" +
        "%.................................................%\n" +
        "%.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n" +
        "%.................................................%\n" +
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%.%\n" +
        "%.................................................%\n" +
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")

    expected :=
        "000000000000000000000000000000000000000000000000000\n" +
        "011111111111111111111111111111111111111111111111110\n" +
        "010000000000000000000000000000000000000000000000000\n" +
        "022222222222222222222222222222222222222222222222220\n" +
        "000000000000000000000000000000000000000000000000020\n" +
        "033333333333333333333333333333333333333333333333330\n" +
        "030000000000000000000000000000000000000000000000000\n" +
        "044444444444444444444444444444444444444444444444440\n" +
        "000000000000000000000000000000000000000000000000040\n" +
        "055555555555555555555555555555555555555555555555550\n" +
        "000000000000000000000000000000000000000000000000000"

    mystery := NewMystery(terrain)
    potentialEnemy := NewPotentialEnemy(terrain)
    tier := NewTier(terrain, mystery, potentialEnemy)

    if tier.String() != expected {
        t.Error(terrain)
        t.Error(tier)
        t.Error(tier.distanceAt[2][1])
        t.Error(tier.distanceAt[6][1])
    }
}

func TestTierDepth(t *testing.T) {
    terrain := NewTerrain(
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n" +
        "%..........................................%\n" +
        "%..a..aa..aaa..aaaa..aaaaa.....%%%%%%%%%%%.%\n" +
        "%.....aa..aaa..aaaa..aaaaa.....%...........%\n" +
        "%.........aaa..aaaa..aaaaa.....%......%%%%%%\n" +
        "%..............aaaa..aaaaa.....%...........%\n" +
        "%.........1...a......aaaaa.....%...........%\n" +
        "%..............................%....aaaa...%\n" +
        "%%%%%%%%%%%%%%.................%....aaaa...%\n" +
        "%....aaaaaaaa..................%....aaaa...%\n" +
        "%....aaaaaaaa..................%....aaaa...%\n" +
        "%....aaaaaaaa..................%...........%\n" +
        "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%")

    expected :=
        "00000000000000000000000000000000000000000000\n" +
        "01111111111111111111111111111111111111111110\n" +
        "01111111112221122221133333111110000000000010\n" +
        "01111111112221122221133333111110111111111110\n" +
        "01111111112221122221133333111110111111000000\n" +
        "01111111111111122221133333111110211111111120\n" +
        "01111111110111211111133333111110221111111220\n" +
        "01111111111111111111111111111110222111112220\n" +
        "00000000000000111111111111111110222211122220\n" +
        "09999888888881111111111111111110222221222220\n" +
        "09999888888881111111111111111110222222222220\n" +
        "09999888888881111111111111111110222222222220\n" +
        "00000000000000000000000000000000000000000000"

    mystery := NewMystery(terrain)
    potentialEnemy := NewPotentialEnemy(terrain)
    tier := NewTier(terrain, mystery, potentialEnemy)

    if tier.String() != expected {
        t.Error(terrain)
        t.Error(tier)
    }
}
*/
